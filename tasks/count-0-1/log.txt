Code set 
Commands recognized 39

Input set { 6, 1, 0, 1, 0, 0, 1 }

RUNNING... 
1. called LOAD 0 (=)  -> 		{ (0)->0 }
2. called STORE 2 ()  -> 		{ (0)->0, (2)->0 }
3. called STORE 3 ()  -> 		{ (0)->0, (2)->0, (3)->0 }
4. called READ 1 ()  -> 		{ (0)->0, (1)->6, (2)->0, (3)->0 }
5. called LOAD 1 ()  -> 		{ (0)->6, (1)->6, (2)->0, (3)->0 }
6. called JZERO EQL (<>)  -> 		{ (0)->6, (1)->6, (2)->0, (3)->0 }
7. called JZERO A (<>) R -> 		{ (0)->6, (1)->6, (2)->0, (3)->0 }
8. called READ 0 ()  -> 		{ (0)->1, (1)->6, (2)->0, (3)->0 }
9. called JGTZ U (<>)  -> 		{ (0)->1, (1)->6, (2)->0, (3)->0 }
10. called LOAD 3 () U -> 		{ (0)->0, (1)->6, (2)->0, (3)->0 }
11. called ADD 1 (=)  -> 		{ (0)->1, (1)->6, (2)->0, (3)->0 }
12. called STORE 3 ()  -> 		{ (0)->1, (1)->6, (2)->0, (3)->1 }
13. called JUMP N (<>)  -> 		{ (0)->1, (1)->6, (2)->0, (3)->1 }
14. called LOAD 1 () N -> 		{ (0)->6, (1)->6, (2)->0, (3)->1 }
15. called SUB 1 (=)  -> 		{ (0)->5, (1)->6, (2)->0, (3)->1 }
16. called STORE 1 ()  -> 		{ (0)->5, (1)->5, (2)->0, (3)->1 }
17. called JUMP R (<>)  -> 		{ (0)->5, (1)->5, (2)->0, (3)->1 }
18. called JZERO A (<>) R -> 		{ (0)->5, (1)->5, (2)->0, (3)->1 }
19. called READ 0 ()  -> 		{ (0)->0, (1)->5, (2)->0, (3)->1 }
20. called JGTZ U (<>)  -> 		{ (0)->0, (1)->5, (2)->0, (3)->1 }
21. called JUMP Z (<>)  -> 		{ (0)->0, (1)->5, (2)->0, (3)->1 }
22. called LOAD 2 () Z -> 		{ (0)->0, (1)->5, (2)->0, (3)->1 }
23. called ADD 1 (=)  -> 		{ (0)->1, (1)->5, (2)->0, (3)->1 }
24. called STORE 2 ()  -> 		{ (0)->1, (1)->5, (2)->1, (3)->1 }
25. called JUMP N (<>)  -> 		{ (0)->1, (1)->5, (2)->1, (3)->1 }
26. called LOAD 1 () N -> 		{ (0)->5, (1)->5, (2)->1, (3)->1 }
27. called SUB 1 (=)  -> 		{ (0)->4, (1)->5, (2)->1, (3)->1 }
28. called STORE 1 ()  -> 		{ (0)->4, (1)->4, (2)->1, (3)->1 }
29. called JUMP R (<>)  -> 		{ (0)->4, (1)->4, (2)->1, (3)->1 }
30. called JZERO A (<>) R -> 		{ (0)->4, (1)->4, (2)->1, (3)->1 }
31. called READ 0 ()  -> 		{ (0)->1, (1)->4, (2)->1, (3)->1 }
32. called JGTZ U (<>)  -> 		{ (0)->1, (1)->4, (2)->1, (3)->1 }
33. called LOAD 3 () U -> 		{ (0)->1, (1)->4, (2)->1, (3)->1 }
34. called ADD 1 (=)  -> 		{ (0)->2, (1)->4, (2)->1, (3)->1 }
35. called STORE 3 ()  -> 		{ (0)->2, (1)->4, (2)->1, (3)->2 }
36. called JUMP N (<>)  -> 		{ (0)->2, (1)->4, (2)->1, (3)->2 }
37. called LOAD 1 () N -> 		{ (0)->4, (1)->4, (2)->1, (3)->2 }
38. called SUB 1 (=)  -> 		{ (0)->3, (1)->4, (2)->1, (3)->2 }
39. called STORE 1 ()  -> 		{ (0)->3, (1)->3, (2)->1, (3)->2 }
40. called JUMP R (<>)  -> 		{ (0)->3, (1)->3, (2)->1, (3)->2 }
41. called JZERO A (<>) R -> 		{ (0)->3, (1)->3, (2)->1, (3)->2 }
42. called READ 0 ()  -> 		{ (0)->0, (1)->3, (2)->1, (3)->2 }
43. called JGTZ U (<>)  -> 		{ (0)->0, (1)->3, (2)->1, (3)->2 }
44. called JUMP Z (<>)  -> 		{ (0)->0, (1)->3, (2)->1, (3)->2 }
45. called LOAD 2 () Z -> 		{ (0)->1, (1)->3, (2)->1, (3)->2 }
46. called ADD 1 (=)  -> 		{ (0)->2, (1)->3, (2)->1, (3)->2 }
47. called STORE 2 ()  -> 		{ (0)->2, (1)->3, (2)->2, (3)->2 }
48. called JUMP N (<>)  -> 		{ (0)->2, (1)->3, (2)->2, (3)->2 }
49. called LOAD 1 () N -> 		{ (0)->3, (1)->3, (2)->2, (3)->2 }
50. called SUB 1 (=)  -> 		{ (0)->2, (1)->3, (2)->2, (3)->2 }
51. called STORE 1 ()  -> 		{ (0)->2, (1)->2, (2)->2, (3)->2 }
52. called JUMP R (<>)  -> 		{ (0)->2, (1)->2, (2)->2, (3)->2 }
53. called JZERO A (<>) R -> 		{ (0)->2, (1)->2, (2)->2, (3)->2 }
54. called READ 0 ()  -> 		{ (0)->0, (1)->2, (2)->2, (3)->2 }
55. called JGTZ U (<>)  -> 		{ (0)->0, (1)->2, (2)->2, (3)->2 }
56. called JUMP Z (<>)  -> 		{ (0)->0, (1)->2, (2)->2, (3)->2 }
57. called LOAD 2 () Z -> 		{ (0)->2, (1)->2, (2)->2, (3)->2 }
58. called ADD 1 (=)  -> 		{ (0)->3, (1)->2, (2)->2, (3)->2 }
59. called STORE 2 ()  -> 		{ (0)->3, (1)->2, (2)->3, (3)->2 }
60. called JUMP N (<>)  -> 		{ (0)->3, (1)->2, (2)->3, (3)->2 }
61. called LOAD 1 () N -> 		{ (0)->2, (1)->2, (2)->3, (3)->2 }
62. called SUB 1 (=)  -> 		{ (0)->1, (1)->2, (2)->3, (3)->2 }
63. called STORE 1 ()  -> 		{ (0)->1, (1)->1, (2)->3, (3)->2 }
64. called JUMP R (<>)  -> 		{ (0)->1, (1)->1, (2)->3, (3)->2 }
65. called JZERO A (<>) R -> 		{ (0)->1, (1)->1, (2)->3, (3)->2 }
66. called READ 0 ()  -> 		{ (0)->1, (1)->1, (2)->3, (3)->2 }
67. called JGTZ U (<>)  -> 		{ (0)->1, (1)->1, (2)->3, (3)->2 }
68. called LOAD 3 () U -> 		{ (0)->2, (1)->1, (2)->3, (3)->2 }
69. called ADD 1 (=)  -> 		{ (0)->3, (1)->1, (2)->3, (3)->2 }
70. called STORE 3 ()  -> 		{ (0)->3, (1)->1, (2)->3, (3)->3 }
71. called JUMP N (<>)  -> 		{ (0)->3, (1)->1, (2)->3, (3)->3 }
72. called LOAD 1 () N -> 		{ (0)->1, (1)->1, (2)->3, (3)->3 }
73. called SUB 1 (=)  -> 		{ (0)->0, (1)->1, (2)->3, (3)->3 }
74. called STORE 1 ()  -> 		{ (0)->0, (1)->0, (2)->3, (3)->3 }
75. called JUMP R (<>)  -> 		{ (0)->0, (1)->0, (2)->3, (3)->3 }
76. called JZERO A (<>) R -> 		{ (0)->0, (1)->0, (2)->3, (3)->3 }
77. called LOAD 2 () A -> 		{ (0)->3, (1)->0, (2)->3, (3)->3 }
78. called JZERO FU (<>)  -> 		{ (0)->3, (1)->0, (2)->3, (3)->3 }
79. called LOAD 3 ()  -> 		{ (0)->3, (1)->0, (2)->3, (3)->3 }
80. called JZERO FZ (<>)  -> 		{ (0)->3, (1)->0, (2)->3, (3)->3 }
81. called DIV 2 ()  -> 		{ (0)->1, (1)->0, (2)->3, (3)->3 }
82. called JZERO FZ (<>)  -> 		{ (0)->1, (1)->0, (2)->3, (3)->3 }
83. called LOAD 2 ()  -> 		{ (0)->3, (1)->0, (2)->3, (3)->3 }
84. called DIV 3 ()  -> 		{ (0)->1, (1)->0, (2)->3, (3)->3 }
85. called JZERO FU (<>)  -> 		{ (0)->1, (1)->0, (2)->3, (3)->3 }
86. called JUMP EQ (<>)  -> 		{ (0)->1, (1)->0, (2)->3, (3)->3 }
87. called WRITE 1 (=) EQ -> 		{ (0)->1, (1)->0, (2)->3, (3)->3 }
88. called WRITE 0 (=)  -> 		{ (0)->1, (1)->0, (2)->3, (3)->3 }
89. called HALT  (<>)  -> 		{ (0)->1, (1)->0, (2)->3, (3)->3 }
PROGRAM FINISHED 

Commands executed 89
Output: { 1, 0 }
