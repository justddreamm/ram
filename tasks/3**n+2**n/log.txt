Code set 
Commands recognized 23

Input set { 4 }

Machine name set 3**n+2**n

RUNNING 3**n+2**n
 1. LOAD 1 (=)  -> 		{ (0)->1 }
 2. STORE 2 ()  -> 		{ (0)->1, (2)->1 }
 3. STORE 3 ()  -> 		{ (0)->1, (2)->1, (3)->1 }
 4. READ 0 ()  -> 		{ (0)->4, (2)->1, (3)->1 }
 5. STORE 1 ()  -> 		{ (0)->4, (1)->4, (2)->1, (3)->1 }
 6. JZERO NULL (<>)  -> 		{ (0)->4, (1)->4, (2)->1, (3)->1 }
 7. JZERO ANS (<>) L -> 		{ (0)->4, (1)->4, (2)->1, (3)->1 }
 8. LOAD 2 ()  -> 		{ (0)->1, (1)->4, (2)->1, (3)->1 }
 9. MULT 2 (=)  -> 		{ (0)->2, (1)->4, (2)->1, (3)->1 }
10. STORE 2 ()  -> 		{ (0)->2, (1)->4, (2)->2, (3)->1 }
11. LOAD 3 ()  -> 		{ (0)->1, (1)->4, (2)->2, (3)->1 }
12. MULT 3 (=)  -> 		{ (0)->3, (1)->4, (2)->2, (3)->1 }
13. STORE 3 ()  -> 		{ (0)->3, (1)->4, (2)->2, (3)->3 }
14. LOAD 1 ()  -> 		{ (0)->4, (1)->4, (2)->2, (3)->3 }
15. SUB 1 (=)  -> 		{ (0)->3, (1)->4, (2)->2, (3)->3 }
16. STORE 1 ()  -> 		{ (0)->3, (1)->3, (2)->2, (3)->3 }
17. JUMP L (<>)  -> 		{ (0)->3, (1)->3, (2)->2, (3)->3 }
18. JZERO ANS (<>) L -> 		{ (0)->3, (1)->3, (2)->2, (3)->3 }
19. LOAD 2 ()  -> 		{ (0)->2, (1)->3, (2)->2, (3)->3 }
20. MULT 2 (=)  -> 		{ (0)->4, (1)->3, (2)->2, (3)->3 }
21. STORE 2 ()  -> 		{ (0)->4, (1)->3, (2)->4, (3)->3 }
22. LOAD 3 ()  -> 		{ (0)->3, (1)->3, (2)->4, (3)->3 }
23. MULT 3 (=)  -> 		{ (0)->9, (1)->3, (2)->4, (3)->3 }
24. STORE 3 ()  -> 		{ (0)->9, (1)->3, (2)->4, (3)->9 }
25. LOAD 1 ()  -> 		{ (0)->3, (1)->3, (2)->4, (3)->9 }
26. SUB 1 (=)  -> 		{ (0)->2, (1)->3, (2)->4, (3)->9 }
27. STORE 1 ()  -> 		{ (0)->2, (1)->2, (2)->4, (3)->9 }
28. JUMP L (<>)  -> 		{ (0)->2, (1)->2, (2)->4, (3)->9 }
29. JZERO ANS (<>) L -> 		{ (0)->2, (1)->2, (2)->4, (3)->9 }
30. LOAD 2 ()  -> 		{ (0)->4, (1)->2, (2)->4, (3)->9 }
31. MULT 2 (=)  -> 		{ (0)->8, (1)->2, (2)->4, (3)->9 }
32. STORE 2 ()  -> 		{ (0)->8, (1)->2, (2)->8, (3)->9 }
33. LOAD 3 ()  -> 		{ (0)->9, (1)->2, (2)->8, (3)->9 }
34. MULT 3 (=)  -> 		{ (0)->27, (1)->2, (2)->8, (3)->9 }
35. STORE 3 ()  -> 		{ (0)->27, (1)->2, (2)->8, (3)->27 }
36. LOAD 1 ()  -> 		{ (0)->2, (1)->2, (2)->8, (3)->27 }
37. SUB 1 (=)  -> 		{ (0)->1, (1)->2, (2)->8, (3)->27 }
38. STORE 1 ()  -> 		{ (0)->1, (1)->1, (2)->8, (3)->27 }
39. JUMP L (<>)  -> 		{ (0)->1, (1)->1, (2)->8, (3)->27 }
40. JZERO ANS (<>) L -> 		{ (0)->1, (1)->1, (2)->8, (3)->27 }
41. LOAD 2 ()  -> 		{ (0)->8, (1)->1, (2)->8, (3)->27 }
42. MULT 2 (=)  -> 		{ (0)->16, (1)->1, (2)->8, (3)->27 }
43. STORE 2 ()  -> 		{ (0)->16, (1)->1, (2)->16, (3)->27 }
44. LOAD 3 ()  -> 		{ (0)->27, (1)->1, (2)->16, (3)->27 }
45. MULT 3 (=)  -> 		{ (0)->81, (1)->1, (2)->16, (3)->27 }
46. STORE 3 ()  -> 		{ (0)->81, (1)->1, (2)->16, (3)->81 }
47. LOAD 1 ()  -> 		{ (0)->1, (1)->1, (2)->16, (3)->81 }
48. SUB 1 (=)  -> 		{ (0)->0, (1)->1, (2)->16, (3)->81 }
49. STORE 1 ()  -> 		{ (0)->0, (1)->0, (2)->16, (3)->81 }
50. JUMP L (<>)  -> 		{ (0)->0, (1)->0, (2)->16, (3)->81 }
51. JZERO ANS (<>) L -> 		{ (0)->0, (1)->0, (2)->16, (3)->81 }
52. LOAD 2 () ANS -> 		{ (0)->16, (1)->0, (2)->16, (3)->81 }
53. ADD 3 ()  -> 		{ (0)->97, (1)->0, (2)->16, (3)->81 }
54. WRITE 0 ()  -> 		{ (0)->97, (1)->0, (2)->16, (3)->81 }
55. HALT  (<>)  -> 		{ (0)->97, (1)->0, (2)->16, (3)->81 }
PROGRAM FINISHED 

Commands executed 55
Output: { 97 }
