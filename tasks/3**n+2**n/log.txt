Code set 
Commands recognized 22

Input set { 15 }

Machine name set 3**n+2**n

RUNNING 3**n+2**n
 1. LOAD 1 (=)  -> 		{ (0)->1 }
 2. STORE 2 ()  -> 		{ (0)->1, (2)->1 }
 3. STORE 3 ()  -> 		{ (0)->1, (2)->1, (3)->1 }
 4. READ 0 ()  -> 		{ (0)->15, (2)->1, (3)->1 }
 5. STORE 1 ()  -> 		{ (0)->15, (1)->15, (2)->1, (3)->1 }
 6. JZERO NULL (<>)  -> 		{ (0)->15, (1)->15, (2)->1, (3)->1 }
 7. JZERO ANS (<>) L -> 		{ (0)->15, (1)->15, (2)->1, (3)->1 }
 8. LOAD 2 ()  -> 		{ (0)->1, (1)->15, (2)->1, (3)->1 }
 9. MULT 2 (=)  -> 		{ (0)->2, (1)->15, (2)->1, (3)->1 }
10. STORE 2 ()  -> 		{ (0)->2, (1)->15, (2)->2, (3)->1 }
11. LOAD 3 ()  -> 		{ (0)->1, (1)->15, (2)->2, (3)->1 }
12. MULT 3 (=)  -> 		{ (0)->3, (1)->15, (2)->2, (3)->1 }
13. STORE 3 ()  -> 		{ (0)->3, (1)->15, (2)->2, (3)->3 }
14. LOAD 1 ()  -> 		{ (0)->15, (1)->15, (2)->2, (3)->3 }
15. SUB 1 (=)  -> 		{ (0)->14, (1)->15, (2)->2, (3)->3 }
16. STORE 1 ()  -> 		{ (0)->14, (1)->14, (2)->2, (3)->3 }
17. JUMP L (<>)  -> 		{ (0)->14, (1)->14, (2)->2, (3)->3 }
18. JZERO ANS (<>) L -> 		{ (0)->14, (1)->14, (2)->2, (3)->3 }
19. LOAD 2 ()  -> 		{ (0)->2, (1)->14, (2)->2, (3)->3 }
20. MULT 2 (=)  -> 		{ (0)->4, (1)->14, (2)->2, (3)->3 }
21. STORE 2 ()  -> 		{ (0)->4, (1)->14, (2)->4, (3)->3 }
22. LOAD 3 ()  -> 		{ (0)->3, (1)->14, (2)->4, (3)->3 }
23. MULT 3 (=)  -> 		{ (0)->9, (1)->14, (2)->4, (3)->3 }
24. STORE 3 ()  -> 		{ (0)->9, (1)->14, (2)->4, (3)->9 }
25. LOAD 1 ()  -> 		{ (0)->14, (1)->14, (2)->4, (3)->9 }
26. SUB 1 (=)  -> 		{ (0)->13, (1)->14, (2)->4, (3)->9 }
27. STORE 1 ()  -> 		{ (0)->13, (1)->13, (2)->4, (3)->9 }
28. JUMP L (<>)  -> 		{ (0)->13, (1)->13, (2)->4, (3)->9 }
29. JZERO ANS (<>) L -> 		{ (0)->13, (1)->13, (2)->4, (3)->9 }
30. LOAD 2 ()  -> 		{ (0)->4, (1)->13, (2)->4, (3)->9 }
31. MULT 2 (=)  -> 		{ (0)->8, (1)->13, (2)->4, (3)->9 }
32. STORE 2 ()  -> 		{ (0)->8, (1)->13, (2)->8, (3)->9 }
33. LOAD 3 ()  -> 		{ (0)->9, (1)->13, (2)->8, (3)->9 }
34. MULT 3 (=)  -> 		{ (0)->27, (1)->13, (2)->8, (3)->9 }
35. STORE 3 ()  -> 		{ (0)->27, (1)->13, (2)->8, (3)->27 }
36. LOAD 1 ()  -> 		{ (0)->13, (1)->13, (2)->8, (3)->27 }
37. SUB 1 (=)  -> 		{ (0)->12, (1)->13, (2)->8, (3)->27 }
38. STORE 1 ()  -> 		{ (0)->12, (1)->12, (2)->8, (3)->27 }
39. JUMP L (<>)  -> 		{ (0)->12, (1)->12, (2)->8, (3)->27 }
40. JZERO ANS (<>) L -> 		{ (0)->12, (1)->12, (2)->8, (3)->27 }
41. LOAD 2 ()  -> 		{ (0)->8, (1)->12, (2)->8, (3)->27 }
42. MULT 2 (=)  -> 		{ (0)->16, (1)->12, (2)->8, (3)->27 }
43. STORE 2 ()  -> 		{ (0)->16, (1)->12, (2)->16, (3)->27 }
44. LOAD 3 ()  -> 		{ (0)->27, (1)->12, (2)->16, (3)->27 }
45. MULT 3 (=)  -> 		{ (0)->81, (1)->12, (2)->16, (3)->27 }
46. STORE 3 ()  -> 		{ (0)->81, (1)->12, (2)->16, (3)->81 }
47. LOAD 1 ()  -> 		{ (0)->12, (1)->12, (2)->16, (3)->81 }
48. SUB 1 (=)  -> 		{ (0)->11, (1)->12, (2)->16, (3)->81 }
49. STORE 1 ()  -> 		{ (0)->11, (1)->11, (2)->16, (3)->81 }
50. JUMP L (<>)  -> 		{ (0)->11, (1)->11, (2)->16, (3)->81 }
51. JZERO ANS (<>) L -> 		{ (0)->11, (1)->11, (2)->16, (3)->81 }
52. LOAD 2 ()  -> 		{ (0)->16, (1)->11, (2)->16, (3)->81 }
53. MULT 2 (=)  -> 		{ (0)->32, (1)->11, (2)->16, (3)->81 }
54. STORE 2 ()  -> 		{ (0)->32, (1)->11, (2)->32, (3)->81 }
55. LOAD 3 ()  -> 		{ (0)->81, (1)->11, (2)->32, (3)->81 }
56. MULT 3 (=)  -> 		{ (0)->243, (1)->11, (2)->32, (3)->81 }
57. STORE 3 ()  -> 		{ (0)->243, (1)->11, (2)->32, (3)->243 }
58. LOAD 1 ()  -> 		{ (0)->11, (1)->11, (2)->32, (3)->243 }
59. SUB 1 (=)  -> 		{ (0)->10, (1)->11, (2)->32, (3)->243 }
60. STORE 1 ()  -> 		{ (0)->10, (1)->10, (2)->32, (3)->243 }
61. JUMP L (<>)  -> 		{ (0)->10, (1)->10, (2)->32, (3)->243 }
62. JZERO ANS (<>) L -> 		{ (0)->10, (1)->10, (2)->32, (3)->243 }
63. LOAD 2 ()  -> 		{ (0)->32, (1)->10, (2)->32, (3)->243 }
64. MULT 2 (=)  -> 		{ (0)->64, (1)->10, (2)->32, (3)->243 }
65. STORE 2 ()  -> 		{ (0)->64, (1)->10, (2)->64, (3)->243 }
66. LOAD 3 ()  -> 		{ (0)->243, (1)->10, (2)->64, (3)->243 }
67. MULT 3 (=)  -> 		{ (0)->729, (1)->10, (2)->64, (3)->243 }
68. STORE 3 ()  -> 		{ (0)->729, (1)->10, (2)->64, (3)->729 }
69. LOAD 1 ()  -> 		{ (0)->10, (1)->10, (2)->64, (3)->729 }
70. SUB 1 (=)  -> 		{ (0)->9, (1)->10, (2)->64, (3)->729 }
71. STORE 1 ()  -> 		{ (0)->9, (1)->9, (2)->64, (3)->729 }
72. JUMP L (<>)  -> 		{ (0)->9, (1)->9, (2)->64, (3)->729 }
73. JZERO ANS (<>) L -> 		{ (0)->9, (1)->9, (2)->64, (3)->729 }
74. LOAD 2 ()  -> 		{ (0)->64, (1)->9, (2)->64, (3)->729 }
75. MULT 2 (=)  -> 		{ (0)->128, (1)->9, (2)->64, (3)->729 }
76. STORE 2 ()  -> 		{ (0)->128, (1)->9, (2)->128, (3)->729 }
77. LOAD 3 ()  -> 		{ (0)->729, (1)->9, (2)->128, (3)->729 }
78. MULT 3 (=)  -> 		{ (0)->2187, (1)->9, (2)->128, (3)->729 }
79. STORE 3 ()  -> 		{ (0)->2187, (1)->9, (2)->128, (3)->2187 }
80. LOAD 1 ()  -> 		{ (0)->9, (1)->9, (2)->128, (3)->2187 }
81. SUB 1 (=)  -> 		{ (0)->8, (1)->9, (2)->128, (3)->2187 }
82. STORE 1 ()  -> 		{ (0)->8, (1)->8, (2)->128, (3)->2187 }
83. JUMP L (<>)  -> 		{ (0)->8, (1)->8, (2)->128, (3)->2187 }
84. JZERO ANS (<>) L -> 		{ (0)->8, (1)->8, (2)->128, (3)->2187 }
85. LOAD 2 ()  -> 		{ (0)->128, (1)->8, (2)->128, (3)->2187 }
86. MULT 2 (=)  -> 		{ (0)->256, (1)->8, (2)->128, (3)->2187 }
87. STORE 2 ()  -> 		{ (0)->256, (1)->8, (2)->256, (3)->2187 }
88. LOAD 3 ()  -> 		{ (0)->2187, (1)->8, (2)->256, (3)->2187 }
89. MULT 3 (=)  -> 		{ (0)->6561, (1)->8, (2)->256, (3)->2187 }
90. STORE 3 ()  -> 		{ (0)->6561, (1)->8, (2)->256, (3)->6561 }
91. LOAD 1 ()  -> 		{ (0)->8, (1)->8, (2)->256, (3)->6561 }
92. SUB 1 (=)  -> 		{ (0)->7, (1)->8, (2)->256, (3)->6561 }
93. STORE 1 ()  -> 		{ (0)->7, (1)->7, (2)->256, (3)->6561 }
94. JUMP L (<>)  -> 		{ (0)->7, (1)->7, (2)->256, (3)->6561 }
95. JZERO ANS (<>) L -> 		{ (0)->7, (1)->7, (2)->256, (3)->6561 }
96. LOAD 2 ()  -> 		{ (0)->256, (1)->7, (2)->256, (3)->6561 }
97. MULT 2 (=)  -> 		{ (0)->512, (1)->7, (2)->256, (3)->6561 }
98. STORE 2 ()  -> 		{ (0)->512, (1)->7, (2)->512, (3)->6561 }
99. LOAD 3 ()  -> 		{ (0)->6561, (1)->7, (2)->512, (3)->6561 }
100. MULT 3 (=)  -> 		{ (0)->19683, (1)->7, (2)->512, (3)->6561 }
101. STORE 3 ()  -> 		{ (0)->19683, (1)->7, (2)->512, (3)->19683 }
102. LOAD 1 ()  -> 		{ (0)->7, (1)->7, (2)->512, (3)->19683 }
103. SUB 1 (=)  -> 		{ (0)->6, (1)->7, (2)->512, (3)->19683 }
104. STORE 1 ()  -> 		{ (0)->6, (1)->6, (2)->512, (3)->19683 }
105. JUMP L (<>)  -> 		{ (0)->6, (1)->6, (2)->512, (3)->19683 }
106. JZERO ANS (<>) L -> 		{ (0)->6, (1)->6, (2)->512, (3)->19683 }
107. LOAD 2 ()  -> 		{ (0)->512, (1)->6, (2)->512, (3)->19683 }
108. MULT 2 (=)  -> 		{ (0)->1024, (1)->6, (2)->512, (3)->19683 }
109. STORE 2 ()  -> 		{ (0)->1024, (1)->6, (2)->1024, (3)->19683 }
110. LOAD 3 ()  -> 		{ (0)->19683, (1)->6, (2)->1024, (3)->19683 }
111. MULT 3 (=)  -> 		{ (0)->59049, (1)->6, (2)->1024, (3)->19683 }
112. STORE 3 ()  -> 		{ (0)->59049, (1)->6, (2)->1024, (3)->59049 }
113. LOAD 1 ()  -> 		{ (0)->6, (1)->6, (2)->1024, (3)->59049 }
114. SUB 1 (=)  -> 		{ (0)->5, (1)->6, (2)->1024, (3)->59049 }
115. STORE 1 ()  -> 		{ (0)->5, (1)->5, (2)->1024, (3)->59049 }
116. JUMP L (<>)  -> 		{ (0)->5, (1)->5, (2)->1024, (3)->59049 }
117. JZERO ANS (<>) L -> 		{ (0)->5, (1)->5, (2)->1024, (3)->59049 }
118. LOAD 2 ()  -> 		{ (0)->1024, (1)->5, (2)->1024, (3)->59049 }
119. MULT 2 (=)  -> 		{ (0)->2048, (1)->5, (2)->1024, (3)->59049 }
120. STORE 2 ()  -> 		{ (0)->2048, (1)->5, (2)->2048, (3)->59049 }
121. LOAD 3 ()  -> 		{ (0)->59049, (1)->5, (2)->2048, (3)->59049 }
122. MULT 3 (=)  -> 		{ (0)->177147, (1)->5, (2)->2048, (3)->59049 }
123. STORE 3 ()  -> 		{ (0)->177147, (1)->5, (2)->2048, (3)->177147 }
124. LOAD 1 ()  -> 		{ (0)->5, (1)->5, (2)->2048, (3)->177147 }
125. SUB 1 (=)  -> 		{ (0)->4, (1)->5, (2)->2048, (3)->177147 }
126. STORE 1 ()  -> 		{ (0)->4, (1)->4, (2)->2048, (3)->177147 }
127. JUMP L (<>)  -> 		{ (0)->4, (1)->4, (2)->2048, (3)->177147 }
128. JZERO ANS (<>) L -> 		{ (0)->4, (1)->4, (2)->2048, (3)->177147 }
129. LOAD 2 ()  -> 		{ (0)->2048, (1)->4, (2)->2048, (3)->177147 }
130. MULT 2 (=)  -> 		{ (0)->4096, (1)->4, (2)->2048, (3)->177147 }
131. STORE 2 ()  -> 		{ (0)->4096, (1)->4, (2)->4096, (3)->177147 }
132. LOAD 3 ()  -> 		{ (0)->177147, (1)->4, (2)->4096, (3)->177147 }
133. MULT 3 (=)  -> 		{ (0)->531441, (1)->4, (2)->4096, (3)->177147 }
134. STORE 3 ()  -> 		{ (0)->531441, (1)->4, (2)->4096, (3)->531441 }
135. LOAD 1 ()  -> 		{ (0)->4, (1)->4, (2)->4096, (3)->531441 }
136. SUB 1 (=)  -> 		{ (0)->3, (1)->4, (2)->4096, (3)->531441 }
137. STORE 1 ()  -> 		{ (0)->3, (1)->3, (2)->4096, (3)->531441 }
138. JUMP L (<>)  -> 		{ (0)->3, (1)->3, (2)->4096, (3)->531441 }
139. JZERO ANS (<>) L -> 		{ (0)->3, (1)->3, (2)->4096, (3)->531441 }
140. LOAD 2 ()  -> 		{ (0)->4096, (1)->3, (2)->4096, (3)->531441 }
141. MULT 2 (=)  -> 		{ (0)->8192, (1)->3, (2)->4096, (3)->531441 }
142. STORE 2 ()  -> 		{ (0)->8192, (1)->3, (2)->8192, (3)->531441 }
143. LOAD 3 ()  -> 		{ (0)->531441, (1)->3, (2)->8192, (3)->531441 }
144. MULT 3 (=)  -> 		{ (0)->1594323, (1)->3, (2)->8192, (3)->531441 }
145. STORE 3 ()  -> 		{ (0)->1594323, (1)->3, (2)->8192, (3)->1594323 }
146. LOAD 1 ()  -> 		{ (0)->3, (1)->3, (2)->8192, (3)->1594323 }
147. SUB 1 (=)  -> 		{ (0)->2, (1)->3, (2)->8192, (3)->1594323 }
148. STORE 1 ()  -> 		{ (0)->2, (1)->2, (2)->8192, (3)->1594323 }
149. JUMP L (<>)  -> 		{ (0)->2, (1)->2, (2)->8192, (3)->1594323 }
150. JZERO ANS (<>) L -> 		{ (0)->2, (1)->2, (2)->8192, (3)->1594323 }
151. LOAD 2 ()  -> 		{ (0)->8192, (1)->2, (2)->8192, (3)->1594323 }
152. MULT 2 (=)  -> 		{ (0)->16384, (1)->2, (2)->8192, (3)->1594323 }
153. STORE 2 ()  -> 		{ (0)->16384, (1)->2, (2)->16384, (3)->1594323 }
154. LOAD 3 ()  -> 		{ (0)->1594323, (1)->2, (2)->16384, (3)->1594323 }
155. MULT 3 (=)  -> 		{ (0)->4782969, (1)->2, (2)->16384, (3)->1594323 }
156. STORE 3 ()  -> 		{ (0)->4782969, (1)->2, (2)->16384, (3)->4782969 }
157. LOAD 1 ()  -> 		{ (0)->2, (1)->2, (2)->16384, (3)->4782969 }
158. SUB 1 (=)  -> 		{ (0)->1, (1)->2, (2)->16384, (3)->4782969 }
159. STORE 1 ()  -> 		{ (0)->1, (1)->1, (2)->16384, (3)->4782969 }
160. JUMP L (<>)  -> 		{ (0)->1, (1)->1, (2)->16384, (3)->4782969 }
161. JZERO ANS (<>) L -> 		{ (0)->1, (1)->1, (2)->16384, (3)->4782969 }
162. LOAD 2 ()  -> 		{ (0)->16384, (1)->1, (2)->16384, (3)->4782969 }
163. MULT 2 (=)  -> 		{ (0)->32768, (1)->1, (2)->16384, (3)->4782969 }
164. STORE 2 ()  -> 		{ (0)->32768, (1)->1, (2)->32768, (3)->4782969 }
165. LOAD 3 ()  -> 		{ (0)->4782969, (1)->1, (2)->32768, (3)->4782969 }
166. MULT 3 (=)  -> 		{ (0)->14348907, (1)->1, (2)->32768, (3)->4782969 }
167. STORE 3 ()  -> 		{ (0)->14348907, (1)->1, (2)->32768, (3)->14348907 }
168. LOAD 1 ()  -> 		{ (0)->1, (1)->1, (2)->32768, (3)->14348907 }
169. SUB 1 (=)  -> 		{ (0)->0, (1)->1, (2)->32768, (3)->14348907 }
170. STORE 1 ()  -> 		{ (0)->0, (1)->0, (2)->32768, (3)->14348907 }
171. JUMP L (<>)  -> 		{ (0)->0, (1)->0, (2)->32768, (3)->14348907 }
172. JZERO ANS (<>) L -> 		{ (0)->0, (1)->0, (2)->32768, (3)->14348907 }
173. LOAD 2 () ANS -> 		{ (0)->32768, (1)->0, (2)->32768, (3)->14348907 }
174. ADD 3 ()  -> 		{ (0)->14381675, (1)->0, (2)->32768, (3)->14348907 }
175. WRITE 0 ()  -> 		{ (0)->14381675, (1)->0, (2)->32768, (3)->14348907 }
PROGRAM FINISHED 

Commands executed 175
Output: { 14381675 }
